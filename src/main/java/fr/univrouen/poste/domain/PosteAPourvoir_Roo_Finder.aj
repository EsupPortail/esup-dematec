// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fr.univrouen.poste.domain;

import fr.univrouen.poste.domain.PosteAPourvoir;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect PosteAPourvoir_Roo_Finder {
    
    public static Long PosteAPourvoir.countFindPosteAPourvoirsByNumEmploi(String numEmploi) {
        if (numEmploi == null || numEmploi.length() == 0) throw new IllegalArgumentException("The numEmploi argument is required");
        EntityManager em = PosteAPourvoir.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM PosteAPourvoir AS o WHERE o.numEmploi = :numEmploi", Long.class);
        q.setParameter("numEmploi", numEmploi);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<PosteAPourvoir> PosteAPourvoir.findPosteAPourvoirsByNumEmploi(String numEmploi, String sortFieldName, String sortOrder) {
        if (numEmploi == null || numEmploi.length() == 0) throw new IllegalArgumentException("The numEmploi argument is required");
        EntityManager em = PosteAPourvoir.entityManager();
        String jpaQuery = "SELECT o FROM PosteAPourvoir AS o WHERE o.numEmploi = :numEmploi";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<PosteAPourvoir> q = em.createQuery(jpaQuery, PosteAPourvoir.class);
        q.setParameter("numEmploi", numEmploi);
        return q;
    }
    
}
